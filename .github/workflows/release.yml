name: AutoRelease

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags: 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get Tag Version
      id: tag
      run: echo ::set-output name=version::$(echo $GITHUB_REF | cut -d/ -f3)

    - name: Update APT Repo
      run: sudo apt update

    - name: Install Tools
      run: sudo apt install wget p7zip unzip

    - name: Install Fontconfig
      run: sudo apt install fontconfig

    - name: Install Tex Enviorment
      run: |
        sudo apt install texlive texlive-xetex texlive-lang-arabic latexmk

    - name: Make User Fonts Dir
      run: mkdir ~/.fonts

    - name: Install Base Fonts
      run: sudo apt install fonts-dejavu fonts-freefont-otf fonts-hanazono

    - name: Install Noto Emoji Font
      run: wget https://github.com/googlefonts/noto-emoji/raw/master/fonts/NotoEmoji-Regular.ttf -P ~/.fonts/

    - name: Install [NotoFira] Configure Fonts
      run: sudo apt install fonts-noto fonts-firacode

    - name: Install [Sarasa] Config Fonts
      run: |
        wget https://github.com/be5invis/Sarasa-Gothic/releases/download/v0.12.5/sarasa-gothic-ttc-0.12.5.7z -O /tmp/sarasa-gothic.7z
        7zr e -o$HOME/.fonts /tmp/sarasa-gothic.7z
        wget https://github.com/be5invis/Iosevka/releases/download/v2.3.3/ttc-iosevka-2.3.3.zip -O /tmp/iosevka.zip
        unzip /tmp/iosevka.zip -d $HOME/.fonts
        wget https://github.com/be5invis/Iosevka/releases/download/v2.3.3/ttc-iosevka-slab-2.3.3.zip -O /tmp/iosevka-slab.zip
        unzip /tmp/iosevka-slab.zip -d $HOME/.fonts

    - name: Refresh Fontconfig Cache
      run: sudo fc-cache -frvv

    - name: Show Installed Fonts
      run: fc-list -f "%{file} -> %{family}\n"

    - name: Build PDF
      run: |
        make cleanall
        make all

    - name: Open a Github Release
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: ${{ steps.tag.outputs.version }}

    - name: Add [PC NotoFira] Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./scp.pc.notofira.${{ steps.tag.outputs.version }}.pdf
        asset_name: scp.pc.notofira.${{ steps.tag.outputs.version }}.pdf
        asset_content_type: application/pdf

    - name: Add [PC Sarasa] Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./scp.pc.sarasa.${{ steps.tag.outputs.version }}.pdf
        asset_name: scp.pc.sarasa.${{ steps.tag.outputs.version }}.pdf
        asset_content_type: application/pdf

    - name: Add [Kindle NotoFira] Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./scp.kindle.notofira.${{ steps.tag.outputs.version }}.pdf
        asset_name: scp.kindle.notofira.${{ steps.tag.outputs.version }}.pdf
        asset_content_type: application/pdf

    - name: Add [Kindle Sarasa] Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./scp.kindle.sarasa.${{ steps.tag.outputs.version }}.pdf
        asset_name: scp.kindle.sarasa.${{ steps.tag.outputs.version }}.pdf
        asset_content_type: application/pdf

    - name: Add [OP3 NotoFira] Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./scp.op3.notofira.${{ steps.tag.outputs.version }}.pdf
        asset_name: scp.op3.notofira.${{ steps.tag.outputs.version }}.pdf
        asset_content_type: application/pdf

    - name: Add [OP3 Sarasa] Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }}
        asset_path: ./scp.op3.sarasa.${{ steps.tag.outputs.version }}.pdf
        asset_name: scp.op3.sarasa.${{ steps.tag.outputs.version }}.pdf
        asset_content_type: application/pdf
